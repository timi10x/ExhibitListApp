plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.seampaytt"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation "androidx.legacy:legacy-support-v4:$legacySupportVersion"


    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptorVersion"

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"

    // To use by viewModels
    implementation "androidx.activity:activity-ktx:$activityKtxVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"

    // Google Services Location
    implementation "com.google.android.gms:play-services-location:$googleServiceLocationVersion"

    // Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    // Dagger Hilt
    //noinspection GradleDependency *dagger hilt still not stable
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"
    //noinspection GradleDependency *dagger hilt still not stable
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltJetpackVersion"
    kapt "androidx.hilt:hilt-compiler:$hiltJetpackVersion"
    kaptAndroidTest "androidx.hilt:hilt-compiler:$hiltJetpackVersion"

    // Karumi Dexter
    implementation "com.karumi:dexter:$karumiDexterVersion"


    // Unit Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesTestVersion"
}